{"version":3,"sources":["css-in-js-mq/media-queries.ts","css-in-js-mq/index.ts","index.tsx"],"names":["asEms","pixels","andQueries","ands","join","mediaQuery","media","breakpoints","xxSmall","xSmall","small","medium","large","xLarge","xxLarge","until","Object","entries","reduce","untils","i","untilName","untilWidth","opts","and","untilQuery","from","froms","fromName","fromWidth","bp","fromQuery","splice","fromUntilQuery","style","css","fontFamily","display","marginTop","content","color","fontSize","ReactDOM","render","className","document","getElementById"],"mappings":"iMAEMA,EAAQ,SAACC,GAAD,gBAAuBA,EAAS,GAAhC,OAiBRC,EAAa,SAACC,GAAD,OAClBA,EAAI,cAAUA,EAAKC,KAAK,SAApB,KAAkC,IAEjCC,EAAa,SAACC,GAAD,uBACRA,EAAQA,EAAMF,KAAK,KAAO,K,mjBCLrC,I,EAAMG,EAAc,CACnBC,QAAS,IACTC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,MAAO,IACPC,OAAQ,KACRC,QAAS,MAGGC,EAAQC,OAAOC,QAAQV,GAAaW,OAChD,SAACC,EAAD,EAAkCC,GAAlC,uBAAUC,EAAV,KAAqBC,EAArB,6BACED,EAAY,SAACE,GAAD,ODvBW,SAACR,GAAD,6DAA4C,GAA1BS,EAAlB,EAAkBA,IAAKlB,EAAvB,EAAuBA,MAAvB,gBACtBD,EAAWC,GADW,wBACWN,EAAMe,EAAQ,GADzB,aACgCb,EAAWsB,ICsBjCC,CAAWH,EAAYC,KACtDJ,IAEJ,IAGYO,EAAOV,OAAOC,QAAQV,GAAaW,OAC/C,SAACS,EAAD,EAA+BP,GAAO,IAAD,mBAA5BQ,EAA4B,KAAlBC,EAAkB,KAC9BC,EAAK,SAACP,GAAD,ODlCY,SAACG,GAAD,6DAA2C,GAA1BF,EAAjB,EAAiBA,IAAKlB,EAAtB,EAAsBA,MAAtB,gBACrBD,EAAWC,GADU,wBACYN,EAAM0B,GADlB,aAC4BxB,EAAWsB,ICiC9BO,CAAUF,IAa1C,OAXAC,EAAGf,MAAQC,OAAOC,QAAQV,GACxByB,OAAOZ,EAAI,GACXF,OACA,SAACC,EAAD,0BAAUE,EAAV,KAAqBC,EAArB,6BACED,EAAY,SAACE,GAAD,ODlCY,SAC7BG,EACAX,GAF6B,6DAGD,GAA1BS,EAH2B,EAG3BA,IAAKlB,EAHsB,EAGtBA,MAHsB,gBAK1BD,EAAWC,GALe,wBAKON,EAAM0B,GALb,6BAKuC1B,EACnEe,EAAQ,GANoB,aAOvBb,EAAWsB,IC4BZS,CAAeJ,EAAWP,KACxBH,IAEJ,IAGK,EAAP,eAAUS,EAAWE,GAAOH,IAE7B,IChDKO,EAAQC,YAAI,CACjBC,WAAY,YAEZ,cACCC,QAAS,QACTC,UAAW,MACXC,QAAS,kBACTH,WAAY,QACZI,MAAO,OACPC,SAAU,IANX,cAQE1B,EAAMP,UAAY,CAClB+B,QAAS,sBATX,cAYEb,EAAKhB,QAAU,CACf6B,QAAS,mBAbX,cAgBEb,EAAKf,OAAOI,MAAMH,QAAU,CAC5B2B,QAAS,gCAjBX,cAoBExB,EAAMN,OAAO,CAAEe,IAAK,CAAC,sCAAyC,CAC9DgB,MAAO,SArBT,cAwBEzB,EAAMN,OAAO,CAAEH,MAAO,CAAC,WAAc,CACrCkC,MAAO,SAzBT,KAgCDE,IAASC,OAAO,kBAFJ,kBAAM,uBAAGC,UAAWV,GAAd,8BAEF,MAASW,SAASC,eAAe,U","file":"static/js/main.015e70dd.chunk.js","sourcesContent":["import { CallProps } from '.'\n\nconst asEms = (pixels: number) => `${pixels / 16}em`\n\nexport const fromQuery = (from: number, { and, media }: CallProps = {}) =>\n\t`${mediaQuery(media)} (min-width: ${asEms(from)}) ${andQueries(and)}`\n\nexport const untilQuery = (until: number, { and, media }: CallProps = {}) =>\n\t`${mediaQuery(media)} (max-width: ${asEms(until - 1)}) ${andQueries(and)}`\n\nexport const fromUntilQuery = (\n\tfrom: number,\n\tuntil: number,\n\t{ and, media }: CallProps = {},\n) =>\n\t`${mediaQuery(media)} (min-width: ${asEms(from)}) and (max-width: ${asEms(\n\t\tuntil - 1,\n\t)}) ${andQueries(and)}`\n\nconst andQueries = (ands: CallProps['and']) =>\n\tands ? `and ${ands.join(' and ')} ` : ''\n\nconst mediaQuery = (media: CallProps['media']) =>\n\t`@media ${media ? media.join(',') : ''}`\n","import { fromQuery, fromUntilQuery, untilQuery } from './media-queries'\n\ntype Breakpoints = keyof typeof breakpoints\n\nexport type CallProps = {\n\tand?: [string]\n\tmedia?: [string]\n}\n\ntype Until = { [key in Breakpoints]: { (arg0?: CallProps): string } }\n\ntype From = {\n\t[key in Breakpoints]: {\n\t\t(arg0?: CallProps): string\n\t\tuntil: Until\n\t}\n}\n\nconst breakpoints = {\n\txxSmall: 320,\n\txSmall: 375,\n\tsmall: 480,\n\tmedium: 740,\n\tlarge: 980,\n\txLarge: 1140,\n\txxLarge: 1300,\n}\n\nexport const until = Object.entries(breakpoints).reduce(\n\t(untils, [untilName, untilWidth], i) => ({\n\t\t[untilName]: (opts: CallProps) => untilQuery(untilWidth, opts),\n\t\t...untils,\n\t}),\n\t{},\n) as Until\n\nexport const from = Object.entries(breakpoints).reduce(\n\t(froms, [fromName, fromWidth], i) => {\n\t\tconst bp = (opts: CallProps) => fromQuery(fromWidth)\n\n\t\tbp.until = Object.entries(breakpoints)\n\t\t\t.splice(i + 1)\n\t\t\t.reduce(\n\t\t\t\t(untils, [untilName, untilWidth]) => ({\n\t\t\t\t\t[untilName]: (opts: CallProps) =>\n\t\t\t\t\t\tfromUntilQuery(fromWidth, untilWidth),\n\t\t\t\t\t...untils,\n\t\t\t\t}),\n\t\t\t\t{},\n\t\t\t)\n\n\t\treturn { [fromName]: bp, ...froms }\n\t},\n\t{},\n) as From\n","import { css } from 'emotion'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { from, until } from './css-in-js-mq'\n\nconst style = css({\n\tfontFamily: 'system-ui',\n\n\t'::after': {\n\t\tdisplay: 'block',\n\t\tmarginTop: '1em',\n\t\tcontent: \"'no mq applies'\",\n\t\tfontFamily: 'menlo',\n\t\tcolor: 'gray',\n\t\tfontSize: 12,\n\n\t\t[until.xxSmall()]: {\n\t\t\tcontent: \"'until.xxSmall()'\",\n\t\t},\n\n\t\t[from.small()]: {\n\t\t\tcontent: \"'from.small()'\",\n\t\t},\n\n\t\t[from.medium.until.large()]: {\n\t\t\tcontent: \"'from.medium.until.large()'\",\n\t\t},\n\n\t\t[until.xSmall({ and: ['(prefers-reduced-motion: reduce)'] })]: {\n\t\t\tcolor: 'blue',\n\t\t},\n\n\t\t[until.xSmall({ media: ['print'] })]: {\n\t\t\tcolor: 'blue',\n\t\t},\n\t},\n})\n\nconst App = () => <p className={style}>resize your browserâ€¦</p>\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}